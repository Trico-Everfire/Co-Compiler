#pragma once

enum CCompilerSpecialEnum
{
    SPECIAL_EXEC = 0,
    CC_SPECIAL_CHANGE_DIRECTORY,
    CC_SPECIAL_COPY_FILE,
    CC_SPECIAL_DELETE_FILE,
    CC_SPECIAL_RENAME_FILE,
    CC_SPECIAL_GENERATE_GRID_NAV,
    CC_SPECIAL_COPY_FILE_IF_EXISTS,
    CC_SPECIAL_SET_LOCAL_VARIABLE_FULL_PATH_FILE,
    CC_SPECIAL_SET_LOCAL_VARIABLE_FILENAME,
    CC_SPECIAL_SET_LOCAL_VARIABLE_DIRECTORY,
    CC_SPECIAL_CLEAR_LOCAL_VARIABLE,
    CC_SPECIAL_FATAL_ASSERT,
    CC_SPECIAL_WARNING_ASSERT,
    CC_SPECIAL_CLEAR_CONSOLE,
    CC_SPECIAL_LOG,

    SRC_SPECIAL_CHANGE_DIRECTORY = 256,
    SRC_SPECIAL_COPY_FILE,
    SRC_SPECIAL_DELETE_FILE,
    SRC_SPECIAL_RENAME_FILE,
    SRC_SPECIAL_GENERATE_GRID_NAV,
    SRC_SPECIAL_COPY_FILE_IF_EXISTS,
};

enum class TokenType
{
    LITERAL = 0,
    STRING,
    EQUALS,
    OPEN_BRACE,
    CLOSE_BRACE,
    OPEN_BRACKET,
    CLOSE_BRACKET,
    OPEN_PARENTHESIS,
    CLOSE_PARENTHESIS,
    COMMA,
    SEMI_COLUMN,
    STANDALONE_COMMENT,
    ENDLINE_COMMENT,
};

enum class ParseError
{
    NO_ERROR = 0,
    FILE_READ_ERROR,
    TOKENIZATION_ERROR,
    INVALID_STRING,
    INVALID_LITERAL,
    INVALID_EQUALS,
    INVALID_OPEN_BRACE,
    INVALID_CLOSE_BRACE,
    INVALID_OPEN_BRACKET,
    INVALID_CLOSE_BRACKET,
    INVALID_OPEN_PARENTHESIS,
    INVALID_CLOSE_PARENTHESIS,
    INVALID_COMMA,
    INVALID_SEMI_COLUMN,
    INVALID_COMMENT, //Trust me, this can happen ;P
    PREMATURE_EOF,
    UNINITIALISED,
};